version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: book_manager_api
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - book_manager_network

  postgres:
    image: postgres:15-alpine
    container_name: book_manager_postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - book_manager_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - book_manager_network

  redis:
    image: redis:7-alpine
    container_name: book_manager_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - book_manager_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - book_manager_network

networks:
  book_manager_network:
    driver: bridge

volumes:
  book_manager_postgres_data:
  book_manager_redis_data: 